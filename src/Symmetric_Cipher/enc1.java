package Symmetric_Cipher;

public class enc1 {
	public static int[] s_box = {138, 63, 191, 233, 7, 164, 44, 119, 237, 92, 242, 155, 105, 84, 31, 22, 126, 14, 141, 112, 246, 188, 29, 51, 136, 50, 134, 94, 69, 184, 100, 131, 234, 219, 154, 162, 33, 241, 151, 227, 170, 221, 2, 32, 248, 8, 72, 20, 95, 75, 192, 123, 28, 9, 193, 140, 161, 132, 158, 52, 228, 230, 168, 89, 163, 180, 139, 217, 211, 143, 165, 190, 224, 198, 79, 235, 93, 231, 37, 220, 118, 229, 110, 174, 223, 70, 160, 226, 61, 43, 116, 74, 247, 187, 12, 169, 166, 57, 218, 157, 86, 13, 251, 15, 117, 82, 121, 45, 172, 255, 101, 135, 207, 90, 55, 244, 238, 40, 81, 102, 186, 177, 214, 71, 68, 62, 99, 215, 147, 76, 225, 130, 156, 87, 65, 171, 182, 148, 120, 210, 232, 197, 18, 97, 0, 222, 146, 85, 185, 189, 179, 25, 16, 196, 73, 38, 129, 49, 152, 204, 206, 39, 133, 111, 200, 19, 5, 59, 47, 181, 103, 208, 60, 216, 46, 243, 3, 142, 106, 53, 149, 78, 23, 212, 91, 127, 98, 35, 67, 17, 26, 239, 201, 64, 6, 153, 167, 42, 178, 124, 249, 11, 1, 24, 145, 137, 205, 194, 115, 175, 88, 250, 54, 58, 254, 176, 66, 4, 10, 21, 48, 107, 203, 240, 199, 41, 128, 183, 252, 30, 36, 159, 195, 245, 104, 80, 56, 150, 96, 34, 209, 236, 213, 125, 108, 173, 253, 27, 77, 114, 202, 144, 122, 113, 83, 109};
	String s = "2995d92a82c6d9bd35e23a2c1724642c513007933b24e83b806c07bd8a0d25ce";
	int[] buffer;
	public enc1() {
		buffer = new int[32];
		for(int i=0;i<32;i++)
		{
			String str = ""+s.charAt(2*i)+s.charAt(2*i+1);
			buffer[i] = Integer.parseInt(str,16);
//			System.out.println(buffer[i]);
		}
//		for(int i=0;i<32;i++)
//		{
//			String str = ""+s.charAt(2*i)+s.charAt(2*i+1);
//			buffer[i] = Integer.parseInt(str,16);
//			buffer[i] = sbox(buffer[i]);
//		}
		
	}
	public int sbox(int input) {
		return s_box[input];
	}
	public void show() {
		System.out.println("out put");
		
		for(int i=0;i<32;i++) {
			System.out.print((char)buffer[i]);
		}
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		enc1 e = new enc1();
//		e.show();
		int buffer = 1;
		buffer = (buffer*3)&0xFF;
		buffer = enc1.s_box[buffer];
		
	}

}
